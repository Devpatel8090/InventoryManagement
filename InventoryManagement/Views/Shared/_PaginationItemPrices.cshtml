  @*     InventoryItems Pagination*@
<div>

    @{
        var totalPagesOfPrices = Math.Ceiling((decimal)Model.TotalInventoryItemsPrices / (decimal)3);

        <input type="number" value="@totalPagesOfPrices" hidden id="TotalPricesForPagination" />

       
            <ul class="pagination d-flex gap-2 justify-content-center mt-3">
                <li class="page-item" style="cursor:pointer">
                    <a class="text-decoration-none text-dark border rounded p-1 bg__colour" aria-label="Previous" value="Prev" onclick="AddItemsPricingPagination()" style="cursor:pointer">
                        <span aria-hidden="true">Prev</span>
                    </a>
                </li>
                @for (var i = 0; i < totalPagesOfPrices; i++)
                {
                    <li class="page-item" style="cursor:pointer"><a class="text-decoration-none text-dark border rounded p-1 ps-2 pe-2 bg__colour" data-value="@(i)" id="currentPageNo" onclick="AddItemsPricingPagination()">@(i+1)</a></li>
                }


                <li class="page-item" style="cursor:pointer">
                    <a class="text-decoration-none text-dark border rounded p-1 bg__colour" aria-label="Next" value="Next" onclick="AddItemsPricingPagination()" style="cursor:pointer">
                        <span aria-hidden="true">Next</span>
                    </a>
                </li>
            </ul>
        
    }
</div>